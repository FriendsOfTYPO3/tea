---
stages:
  - build
  - code_quality
  - lint
  - test

include:
  - template: License-Management.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: build
  needs: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - docker build --cache-from $CONTAINER_RELEASE_IMAGE --tag $CONTAINER_TEST_IMAGE --tag $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
    - docker push $CI_REGISTRY_IMAGE:latest
  artifacts:
    when: on_success
    expire_in: 2 weeks
    paths:
      - ./code/.Build
  cache:
    paths:
      - ./code/.Build
phpcs:
  image: $CONTAINER_TEST_IMAGE
  stage: code_quality
  needs:
    - build
  script:
    - composer ci:php:sniff

php-lint-php7.2:
  image: php:7.2
  stage: lint
  needs:
    - build
  script:
    - composer ci:php:lint

php-lint-php7.3:
  image: php:7.3
  stage: lint
  needs:
    - build
  script:
    - composer ci:php:lint

php-lint-php7.4:
  image: $CONTAINER_TEST_IMAGE
  stage: lint
  needs: []
  script:
    - composer ci:php:lint

ts-lint:
  image: $CONTAINER_TEST_IMAGE
  stage: lint
  needs:
    - build
  script:
    - composer ci:ts:lint

json-lint:
  image: $CONTAINER_TEST_IMAGE
  stage: lint
  needs:
    - build
  script:
    - composer ci:json:lint

yaml-lint:
  image: $CONTAINER_TEST_IMAGE
  stage: lint
  needs:
    - build
  script:
    - composer ci:yaml:lint

xliff-lint:
  image: $CONTAINER_TEST_IMAGE
  stage: lint
  needs:
    - build
  script:
    - wget https://docs.oasis-open.org/xliff/v1.2/os/xliff-core-1.2-strict.xsd
    - xmllint --schema ./xliff-core-1.2-strict.xsd
      --noout $(find Resources -name '*.xlf')

code_quality:
  before_script: []

eslint-sast:
  before_script: []

phpcs-security-audit-sast:
  before_script: []

secrets-sast:
  before_script: []
